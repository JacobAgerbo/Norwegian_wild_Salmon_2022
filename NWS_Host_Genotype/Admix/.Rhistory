#dev.off()
Clusters <- paste("Cluster",NWS_cluster)
cluster_data <- data.frame(names,Clusters)
pop<-read.table("sample_info.txt",as.is=T)
pop[3] <- Clusters
q<-read.table("Admix/NWS.K5.rep1.qopt")
# order according to population and plot the NGSadmix reults
ord<-orderInds(pop = as.vector(pop[,3]), q = q)
barplot(t(q)[,ord],col=2:10,space=0,border=NA,xlab="Individuals",ylab="Admixture proportions for K=3")
text(tapply(1:nrow(pop),pop[ord,1],mean),-0.05,unique(pop[ord,1]),xpd=T, srt=90, cex = 0.5)
text(tapply(1:nrow(pop),pop[ord,3],mean),-0.15,unique(pop[ord,3]),xpd=T)
abline(v=cumsum(sapply(unique(pop[ord,1]),function(x){sum(pop[ord,1]==x)})),col=1,lwd=1.2)
View(cluster_data)
NWS_cluster
d <- read.table("PCA/all.covMat")
labels <- read.table("PCA/sample_info.txt")
md <- read.table("PCA/sample_info.txt")
rownames(d) <- labels$V1
colnames(d) <- labels$V1
#md <- read_excel("Metadata.xlsx")
d <- d[match(md$V1, rownames(d)),]
d <- t(d)
d <- d[match(md$V1, rownames(d)),]
d <- t(d)
#
library(fpc)
pamk.best <- pamk(d)
cat("number of clusters estimated by optimum average silhouette width:", pamk.best$nc, "\n")
plot(pam(d, pamk.best$nc))
#
asw <- numeric(45)
for (k in 2:45){
asw[[k]] <- pam(d, k) $ silinfo $ avg.width
}
k.best <- which.max(asw)
cat("silhouette-optimal number of clusters:", k.best, "\n")
# still 2
res.pca <- prcomp(d)
PCA.plot <- autoplot(prcomp(d), data =md, colour = 'Location', label = TRUE, size = 5) +
theme_classic() +
scale_color_brewer(palette = "Set2")
fviz_eig(res.pca)
PCA.individuals <- fviz_pca_ind(res.pca,
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = FALSE)     # Avoid text overlapping
NWSHC <- hclust(dist(d),method = "ward.D2")
plot(NWSHC)
NWS_cluster <- cutree(NWSHC,k=5)
names <- names(NWS_cluster)
PCA.genoGroups <- fviz_pca_ind(res.pca, label="none", habillage=NWS_cluster,
addEllipses=TRUE, ellipse.level=0.5)
#pdf("PCA_individuals.pdf", height = 12, width = 12)
PCA.individuals
#dev.off()
#pdf("PCA_genoGroups.pdf", height = 12, width = 12)
PCA.genoGroups
#dev.off()
Clusters <- paste("Cluster",NWS_cluster)
cluster_data <- data.frame(names,Clusters)
d <- read.table("PCA/all.covMat")
labels <- read.table("PCA/sample_info.txt")
md <- read.table("PCA/sample_info.txt")
rownames(d) <- labels$V1
colnames(d) <- labels$V1
#md <- read_excel("Metadata.xlsx")
d <- d[match(md$V1, rownames(d)),]
d <- t(d)
d <- d[match(md$V1, rownames(d)),]
d <- t(d)
#
library(fpc)
pamk.best <- pamk(d)
cat("number of clusters estimated by optimum average silhouette width:", pamk.best$nc, "\n")
plot(pam(d, pamk.best$nc))
#
asw <- numeric(45)
for (k in 2:45){
asw[[k]] <- pam(d, k) $ silinfo $ avg.width
}
k.best <- which.max(asw)
cat("silhouette-optimal number of clusters:", k.best, "\n")
# still 2
res.pca <- prcomp(d)
PCA.plot <- autoplot(prcomp(d), data =md, colour = 'Location', label = TRUE, size = 5) +
theme_classic() +
scale_color_brewer(palette = "Set2")
fviz_eig(res.pca)
PCA.individuals <- fviz_pca_ind(res.pca,
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = FALSE)     # Avoid text overlapping
NWSHC <- hclust(dist(d),method = "ward.D2")
plot(NWSHC)
NWS_cluster <- cutree(NWSHC,k=5)
names <- names(NWS_cluster)
PCA.genoGroups <- fviz_pca_ind(res.pca, label="none", habillage=NWS_cluster,
addEllipses=TRUE, ellipse.level=0.75)
#pdf("PCA_individuals.pdf", height = 12, width = 12)
PCA.individuals
#dev.off()
#pdf("PCA_genoGroups.pdf", height = 12, width = 12)
PCA.genoGroups
#dev.off()
Clusters <- paste("Cluster",NWS_cluster)
cluster_data <- data.frame(names,Clusters)
View(cluster_data)
pop<-read.table("sample_info.txt",as.is=T)
pop[3] <- Clusters
q<-read.table("Admix/NWS.K5.rep1.qopt")
# order according to population and plot the NGSadmix reults
ord<-orderInds(pop = as.vector(pop[,3]), q = q)
barplot(t(q)[,ord],col=2:10,space=0,border=NA,xlab="Individuals",ylab="Admixture proportions for K=3")
text(tapply(1:nrow(pop),pop[ord,1],mean),-0.05,unique(pop[ord,1]),xpd=T, srt=90, cex = 0.5)
pop<-read.table("sample_info.txt",as.is=T)
pop[3] <- Clusters
q<-read.table("Admix/NWS.K5.rep1.qopt")
# order according to population and plot the NGSadmix reults
ord<-orderInds(pop = as.vector(pop[,3]), q = q)
source("./Admix/evalAdmix/visFuns.R")
pop<-read.table("sample_info.txt",as.is=T)
pop[3] <- Clusters
q<-read.table("Admix/NWS.K5.rep1.qopt")
# order according to population and plot the NGSadmix reults
ord<-orderInds(pop = as.vector(pop[,3]), q = q)
barplot(t(q)[,ord],col=2:10,space=0,border=NA,xlab="Individuals",ylab="Admixture proportions for K=3")
text(tapply(1:nrow(pop),pop[ord,1],mean),-0.05,unique(pop[ord,1]),xpd=T, srt=90, cex = 0.5)
text(tapply(1:nrow(pop),pop[ord,3],mean),-0.15,unique(pop[ord,3]),xpd=T)
abline(v=cumsum(sapply(unique(pop[ord,1]),function(x){sum(pop[ord,1]==x)})),col=1,lwd=1.2)
# Plot correlation of residuals
r<-read.table("Admix/evaladmixOut_K5.corres")
plotCorRes(cor_mat = r, pop = as.vector(pop[,3]), ord = ord, title="Evaluation of NWS admixture proportions with K=5", max_z=0.1, min_z=-0.1)
q_melt <- melt(q)
library(reshape2)
q_melt <- melt(q)
View(q_melt)
View(pop)
rownames(q) <- pop[1]
rownames(q) <- pop[,1]
q_melt <- melt(q)
View(q_melt)
View(q)
q_melt <- melt(t(q))
View(q_melt)
ggplot(q_melt, aes(x=reorder(Var2,ord), y=value, fill = Var1)) + geom_bar(stat= 'identity', width =1) + scale_fill_brewer(palette = 'Set3') + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = -0.09, size = 6, color = 'black')) + scale_y_continuous(expand = c(0,0))+ theme(legend.position = "none")
ggplot(q_melt, aes(x=Var2, y=value, fill = Var1)) + geom_bar(stat= 'identity', width =1) + scale_fill_brewer(palette = 'Set3') + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = -0.09, size = 6, color = 'black')) + scale_y_continuous(expand = c(0,0))+ theme(legend.position = "none")
ggplot(q_melt, aes(x=Var2, y=value, fill = Var1)) + geom_bar(stat= 'identity', width =1) + scale_fill_brewer(palette = 'Dark2') + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = -0.09, size = 6, color = 'black')) + scale_y_continuous(expand = c(0,0))+ theme(legend.position = "none")
ggplot(q_melt, aes(x=Var2, y=value, fill = Var1)) + geom_bar(stat= 'identity', width =1) + scale_fill_brewer(palette = 'Set2') + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = -0.09, size = 6, color = 'black')) + scale_y_continuous(expand = c(0,0))+ theme(legend.position = "none")
ord_melt <- replicate(ord,5)
ord_melt <- rep(ord,5)
ggplot(q_melt, aes(x=reorder(Var2,ord_melt), y=value, fill = Var1)) + geom_bar(stat= 'identity', width =1) + scale_fill_brewer(palette = 'Set2') + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = -0.09, size = 6, color = 'black')) + scale_y_continuous(expand = c(0,0))+ theme(legend.position = "none")
df <-t(q)
View(df)
df <-q
df$Order <- ord
q_melt <- melt(t(df))
View(q_melt)
View(df)
df <- q[,ord]
df <- t(q)[,ord]
View(df)
q_melt <- melt(df)
ggplot(q_melt, aes(x=reorder(Var2,ord_melt), y=value, fill = Var1)) + geom_bar(stat= 'identity', width =1) + scale_fill_brewer(palette = 'Set2') + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = -0.09, size = 6, color = 'black')) + scale_y_continuous(expand = c(0,0))+ theme(legend.position = "none")
ggplot(q_melt, aes(x=reorder(Var2), y=value, fill = Var1)) + geom_bar(stat= 'identity', width =1) + scale_fill_brewer(palette = 'Set2') + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = -0.09, size = 6, color = 'black')) + scale_y_continuous(expand = c(0,0))+ theme(legend.position = "none")
ggplot(q_melt, aes(x=Var2, y=value, fill = Var1)) + geom_bar(stat= 'identity', width =1) + scale_fill_brewer(palette = 'Set2') + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = -0.09, size = 6, color = 'black')) + scale_y_continuous(expand = c(0,0))+ theme(legend.position = "none")
View(q_melt)
cluster_melt <- rep(pop[3],each=5)
View(pop)
View(cluster_melt)
cluster_melt <- rep(Clusters,each=5)
ggplot(q_melt, aes(x=Var2, y=value, fill = Var1)) + geom_bar(stat= 'identity', width =1) +
scale_fill_brewer(palette = 'Set2') +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = -0.09, size = 6, color = 'black')) +
scale_y_continuous(expand = c(0,0))+ theme(legend.position = "none") +
facet_wrap(~cluster_melt)
q_melt$Clusters <- rep(Clusters,each=5)
ggplot(q_melt, aes(x=Var2, y=value, fill = Var1)) + geom_bar(stat= 'identity', width =1) +
scale_fill_brewer(palette = 'Set2') +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = -0.09, size = 6, color = 'black')) +
scale_y_continuous(expand = c(0,0))+ theme(legend.position = "none") +
facet_wrap(~Clusters)
ggplot(q_melt, aes(x=Var2, y=value, fill = Var1)) + geom_bar(stat= 'identity', width =1) +
scale_fill_brewer(palette = 'Set2') +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = -0.09, size = 6, color = 'black')) +
scale_y_continuous(expand = c(0,0))+ theme(legend.position = "none") +
facet_wrap(~Clusters, scales = "free")
Clusters
q_melt$Cluster <- rep(Clusters,each=5)
ggplot(q_melt, aes(x=Var2, y=value, fill = Var1)) + geom_bar(stat= 'identity', width =1) +
scale_fill_brewer(palette = 'Set2') +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = -0.09, size = 6, color = 'black')) +
scale_y_continuous(expand = c(0,0))+ theme(legend.position = "none") +
facet_wrap(~Cluster, scales = "free")
NWS_cluster
pop[ord,3]
test <- pop[ord,3]
q_melt$Cluster <- rep(test,each=5)
ggplot(q_melt, aes(x=Var2, y=value, fill = Var1)) + geom_bar(stat= 'identity', width =1) +
scale_fill_brewer(palette = 'Set2') +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = -0.09, size = 6, color = 'black')) +
scale_y_continuous(expand = c(0,0))+ theme(legend.position = "none") +
facet_wrap(~Cluster, scales = "free")
pop[ord,1]
ggplot(q_melt, aes(x=Var2, y=value, fill = Var1)) + geom_bar(stat= 'identity', width =1) +
scale_fill_brewer(palette = 'Set2') +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = -0.09, size = 6, color = 'black')) +
scale_y_continuous(expand = c(0,0))+ theme(legend.position = "none") +
facet_wrap(~Cluster, scales = "free", nrow = 1)
ggplot(q_melt, aes(x=Var2, y=value, fill = Var1)) + geom_bar(stat= 'identity', width =1) +
scale_fill_brewer(palette = 'Set2') +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = -0.09, size = 6, color = 'black')) +
scale_y_continuous(expand = c(0,0))+ theme(legend.position = "none") +
facet_wrap(~Cluster, scales = "free", nrow = 1) +
xlab("Admixture") + ylab("")
ggplot(q_melt, aes(x=Var2, y=value, fill = Var1)) + geom_bar(stat= 'identity', width =1) +
scale_fill_brewer(palette = 'Set2') +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = -0.09, size = 6, color = 'black')) +
scale_y_continuous(expand = c(0,0))+ theme(legend.position = "none") +
facet_wrap(~Cluster, scales = "free", nrow = 1) +
xlab("") + ylab("Admixture")
knitr::opts_chunk$set(echo = TRUE)
library(ggfortify)
library(ggplot2)
library(readr)
library(readxl)
library(dplyr)
library(RColorBrewer)
library(vegan)
library(ggpubr)
library(factoextra)
library(cluster)
library(plotly)
library(reshape2)
source("./Admix/evalAdmix/visFuns.R")
d <- read.table("PCA/all.covMat")
labels <- read.table("PCA/sample_info.txt")
md <- read.table("PCA/sample_info.txt")
rownames(d) <- labels$V1
colnames(d) <- labels$V1
#md <- read_excel("Metadata.xlsx")
d <- d[match(md$V1, rownames(d)),]
d <- t(d)
d <- d[match(md$V1, rownames(d)),]
d <- t(d)
#
library(fpc)
pamk.best <- pamk(d)
cat("number of clusters estimated by optimum average silhouette width:", pamk.best$nc, "\n")
plot(pam(d, pamk.best$nc))
#
asw <- numeric(45)
for (k in 2:45){
asw[[k]] <- pam(d, k) $ silinfo $ avg.width
}
k.best <- which.max(asw)
cat("silhouette-optimal number of clusters:", k.best, "\n")
# still 2
res.pca <- prcomp(d)
PCA.plot <- autoplot(prcomp(d), data =md, colour = 'Location', label = TRUE, size = 5) +
theme_classic() +
scale_color_brewer(palette = "Set2")
fviz_eig(res.pca)
PCA.individuals <- fviz_pca_ind(res.pca,
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = FALSE)     # Avoid text overlapping
NWSHC <- hclust(dist(d),method = "ward.D2")
plot(NWSHC)
NWS_cluster <- cutree(NWSHC,k=5)
names <- names(NWS_cluster)
PCA.genoGroups <- fviz_pca_ind(res.pca, label="none", habillage=NWS_cluster,
addEllipses=TRUE, ellipse.level=0.75)
#pdf("PCA_individuals.pdf", height = 12, width = 12)
PCA.individuals
#dev.off()
#pdf("PCA_genoGroups.pdf", height = 12, width = 12)
PCA.genoGroups
#dev.off()
Clusters <- paste("Cluster",NWS_cluster)
cluster_data <- data.frame(names,Clusters)
pop<-read.table("sample_info.txt",as.is=T)
pop[3] <- Clusters
q<-read.table("Admix/NWS.K5.rep1.qopt")
rownames(q) <- pop[,1]
# order according to population and plot the NGSadmix reults
ord<-orderInds(pop = as.vector(pop[,3]), q = q)
df <- t(q)[,ord]
q_melt <- melt(df)
test <- pop[ord,3]
q_melt$Cluster <- rep(test,each=5)
ggplot(q_melt, aes(x=Var2, y=value, fill = Var1)) + geom_bar(stat= 'identity', width =1) +
scale_fill_brewer(palette = 'Set2') +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = -0.09, size = 6, color = 'black')) +
scale_y_continuous(expand = c(0,0))+ theme(legend.position = "none") +
facet_wrap(~Cluster, scales = "free", nrow = 1) +
xlab("") + ylab("Admixture")
d <- read.table("PCA/all.covMat")
labels <- read.table("PCA/sample_info.txt")
md <- read.table("PCA/sample_info.txt")
rownames(d) <- labels$V1
colnames(d) <- labels$V1
#md <- read_excel("Metadata.xlsx")
d <- d[match(md$V1, rownames(d)),]
d <- t(d)
d <- d[match(md$V1, rownames(d)),]
d <- t(d)
res.pca <- prcomp(d)
PCA.plot <- autoplot(prcomp(d), data =md, colour = 'Location', label = TRUE, size = 5) +
theme_classic() +
scale_color_brewer(palette = "Set2")
fviz_eig(res.pca)
PCA.individuals <- fviz_pca_ind(res.pca,
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = FALSE)     # Avoid text overlapping
NWSHC <- hclust(dist(d),method = "ward.D2")
plot(NWSHC)
NWS_cluster <- cutree(NWSHC,k=5)
names <- names(NWS_cluster)
PCA.genoGroups <- fviz_pca_ind(res.pca, label="none", habillage=NWS_cluster,
addEllipses=TRUE, ellipse.level=0.75)
#pdf("PCA_individuals.pdf", height = 12, width = 12)
PCA.individuals
#dev.off()
#pdf("PCA_genoGroups.pdf", height = 12, width = 12)
PCA.genoGroups
#dev.off()
Clusters <- paste("Cluster",NWS_cluster)
cluster_data <- data.frame(names,Clusters)
d <- read.table("PCA/all.covMat")
labels <- read.table("PCA/sample_info.txt")
md <- read.table("PCA/sample_info.txt")
rownames(d) <- labels$V1
colnames(d) <- labels$V1
#md <- read_excel("Metadata.xlsx")
d <- d[match(md$V1, rownames(d)),]
d <- t(d)
d <- d[match(md$V1, rownames(d)),]
d <- t(d)
res.pca <- prcomp(d)
PCA.plot <- autoplot(prcomp(d), data =md, colour = 'Location', label = TRUE, size = 5) +
theme_classic() +
scale_color_brewer(palette = "Set2")
fviz_eig(res.pca)
PCA.individuals <- fviz_pca_ind(res.pca,
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = FALSE)     # Avoid text overlapping
NWSHC <- hclust(dist(d),method = "ward.D2")
plot(NWSHC)
NWS_cluster <- cutree(NWSHC,k=5)
names <- names(NWS_cluster)
PCA.genoGroups <- fviz_pca_ind(res.pca, label="none", habillage=NWS_cluster,
addEllipses=TRUE, ellipse.level=0.75)
#pdf("PCA_individuals.pdf", height = 12, width = 12)
PCA.individuals
#dev.off()
#pdf("PCA_genoGroups.pdf", height = 12, width = 12)
PCA.genoGroups
#dev.off()
Clusters <- paste("Cluster",NWS_cluster)
cluster_data <- data.frame(names,Clusters)
PCA.genoGroups
library(wesanderson)
ggplot(q_melt, aes(x=Var2, y=value, fill = Var1)) + geom_bar(stat= 'identity', width =1) +
scale_fill_manual(values = wes_palette("FantasticFox1")) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = -0.09, size = 6, color = 'black')) +
scale_y_continuous(expand = c(0,0))+ theme(legend.position = "none") +
facet_wrap(~Cluster, scales = "free", nrow = 1) +
xlab("") + ylab("Admixture")
ggplot(q_melt, aes(x=Var2, y=value, fill = Var1)) + geom_bar(stat= 'identity', width =1) +
scale_fill_manual(values = wes_palette("Cavalcanti1")) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = -0.09, size = 6, color = 'black')) +
scale_y_continuous(expand = c(0,0))+ theme(legend.position = "none") +
facet_wrap(~Cluster, scales = "free", nrow = 1) +
xlab("") + ylab("Admixture")
ggplot(q_melt, aes(x=Var2, y=value, fill = Var1)) + geom_bar(stat= 'identity', width =1) +
scale_fill_manual(values = wes_palette("Moonrise3")) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = -0.09, size = 6, color = 'black')) +
scale_y_continuous(expand = c(0,0))+ theme(legend.position = "none") +
facet_wrap(~Cluster, scales = "free", nrow = 1) +
xlab("") + ylab("Admixture")
ggplot(q_melt, aes(x=Var2, y=value, fill = Var1)) + geom_bar(stat= 'identity', width =1) +
scale_fill_manual(values = wes_palette("Darjeeling1")) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = -0.09, size = 6, color = 'black')) +
scale_y_continuous(expand = c(0,0))+ theme(legend.position = "none") +
facet_wrap(~Cluster, scales = "free", nrow = 1) +
xlab("") + ylab("Admixture")
PCA.genoGroups
PCA.genoGroups <- fviz_pca_ind(res.pca, label="none", habillage=NWS_cluster,
addEllipses=TRUE, ellipse.level=0.75, palette = wes_palette("Darjeeling1"))
PCA.genoGroups
ggplot(q_melt, aes(x=Var2, y=value, fill = Var1)) + geom_bar(stat= 'identity', width =1) +
scale_fill_manual(values = wes_palette("IsleofDogs1")) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = -0.09, size = 6, color = 'black')) +
scale_y_continuous(expand = c(0,0))+ theme(legend.position = "none") +
facet_wrap(~Cluster, scales = "free", nrow = 1) +
xlab("") + ylab("Admixture")
ADMIX_plot <- ggplot(q_melt, aes(x=Var2, y=value, fill = Var1)) + geom_bar(stat= 'identity', width =1) +
scale_fill_manual(values = wes_palette("IsleofDogs1")) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = -0.09, size = 6, color = 'black')) +
scale_y_continuous(expand = c(0,0))+ theme(legend.position = "none") +
facet_wrap(~Cluster, scales = "free", nrow = 1) +
xlab("") + ylab("Admixture")
# Plot correlation of residuals
pdf("Population_structure.pdf", height = 12, width = 12)
PCA.genoGroups
ADMIX_plot
plotCorRes(cor_mat = r, pop = as.vector(pop[,3]), ord = ord, title="Evaluation of NWS admixture proportions with K=5", max_z=0.1, min_z=-0.1)
# Plot correlation of residuals
r<-read.table("Admix/evaladmixOut_K5.corres")
plotCorRes(cor_mat = r, pop = as.vector(pop[,3]), ord = ord, title="Evaluation of NWS admixture proportions with K=5", max_z=0.1, min_z=-0.1)
# Plot correlation of residuals
pdf("Population_structure.pdf", height = 12, width = 12)
PCA.genoGroups
ADMIX_plot
plotCorRes(cor_mat = r, pop = as.vector(pop[,3]), ord = ord, title="Evaluation of NWS admixture proportions with K=5", max_z=0.1, min_z=-0.1)
dev.off()
knitr::opts_chunk$set(echo = TRUE)
library(ggfortify)
library(ggplot2)
library(readr)
library(readxl)
library(dplyr)
library(RColorBrewer)
library(wesanderson)
library(vegan)
library(ggpubr)
library(factoextra)
library(cluster)
library(plotly)
library(reshape2)
source("./Admix/evalAdmix/visFuns.R")
# Plot correlation of residuals
r<-read.table("Admix/evaladmixOut_K5.corres")
plotCorRes(cor_mat = r, pop = as.vector(pop[,3]), ord = ord, title="Evaluation of NWS admixture proportions with K=5", max_z=0.1, min_z=-0.1)
knitr::opts_chunk$set(echo = TRUE)
library(ggfortify)
library(ggplot2)
library(readr)
library(readxl)
library(dplyr)
library(RColorBrewer)
library(wesanderson)
library(vegan)
library(ggpubr)
library(factoextra)
library(cluster)
library(plotly)
library(reshape2)
source("./Admix/evalAdmix/visFuns.R")
d <- read.table("PCA/all.covMat")
labels <- read.table("PCA/sample_info.txt")
md <- read.table("PCA/sample_info.txt")
rownames(d) <- labels$V1
colnames(d) <- labels$V1
#md <- read_excel("Metadata.xlsx")
d <- d[match(md$V1, rownames(d)),]
d <- t(d)
d <- d[match(md$V1, rownames(d)),]
d <- t(d)
res.pca <- prcomp(d)
PCA.plot <- autoplot(prcomp(d), data =md, colour = 'Location', label = TRUE, size = 5) +
theme_classic() +
scale_color_brewer(palette = "Set2")
fviz_eig(res.pca)
PCA.individuals <- fviz_pca_ind(res.pca,
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = FALSE)     # Avoid text overlapping
NWSHC <- hclust(dist(d),method = "ward.D2")
plot(NWSHC)
NWS_cluster <- cutree(NWSHC,k=5)
names <- names(NWS_cluster)
PCA.genoGroups <- fviz_pca_ind(res.pca, label="none", habillage=NWS_cluster,
addEllipses=TRUE, ellipse.level=0.75, palette = wes_palette("Darjeeling1"))
#pdf("PCA_individuals.pdf", height = 12, width = 12)
PCA.individuals
#dev.off()
#pdf("PCA_genoGroups.pdf", height = 12, width = 12)
PCA.genoGroups
#dev.off()
Clusters <- paste("Cluster",NWS_cluster)
cluster_data <- data.frame(names,Clusters)
pop<-read.table("sample_info.txt",as.is=T)
pop[3] <- Clusters
q<-read.table("Admix/NWS.K5.rep1.qopt")
rownames(q) <- pop[,1]
# order according to population and plot the NGSadmix reults
ord<-orderInds(pop = as.vector(pop[,3]), q = q)
df <- t(q)[,ord]
q_melt <- melt(df)
test <- pop[ord,3]
q_melt$Cluster <- rep(test,each=5)
ADMIX_plot <- ggplot(q_melt, aes(x=Var2, y=value, fill = Var1)) + geom_bar(stat= 'identity', width =1) +
scale_fill_manual(values = wes_palette("IsleofDogs1")) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = -0.09, size = 6, color = 'black')) +
scale_y_continuous(expand = c(0,0))+ theme(legend.position = "none") +
facet_wrap(~Cluster, scales = "free", nrow = 1) +
xlab("") + ylab("Admixture")
# Plot correlation of residuals
r<-read.table("Admix/evaladmixOut_K5.corres")
plotCorRes(cor_mat = r, pop = as.vector(pop[,3]), ord = ord, title="Evaluation of NWS admixture proportions with K=5", max_z=0.1, min_z=-0.1)
# Plot correlation of residuals
r<-read.table("Admix/evaladmixOut_K5.corres")
plotCorRes(cor_mat = r, pop = as.vector(pop[,3]), ord = ord, title="Evaluation of NWS admixture proportions with K=5", max_z=0.1, min_z=-0.1)
# Plot correlation of residuals
pdf("Population_structure.pdf", height = 12, width = 12)
PCA.genoGroups
ADMIX_plot
plotCorRes(cor_mat = r, pop = as.vector(pop[,3]), ord = ord, title="Evaluation of NWS admixture proportions with K=5", max_z=0.1, min_z=-0.1)
dev.off()
