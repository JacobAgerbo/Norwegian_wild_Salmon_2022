group_by(database) %>%
summarize(Mean = mean(`Number of reads mapped`, na.rm=TRUE),
Q95 = quantile(`Number of reads mapped`, na.rm=TRUE,  probs = 0.95),
Q05 = quantile(`Number of reads mapped`, na.rm=TRUE,  probs = 0.05))
mean.databases = df %>%
group_by(database) %>%
summarize(Mean = mean(`Number of reads mapped`, na.rm=TRUE),
Q95 = quantile(`Number of reads mapped`, na.rm=TRUE,  probs = 0.95),
Q05 = quantile(`Number of reads mapped`, na.rm=TRUE,  probs = 0.05))
#
p2 <- df.read %>%
mutate(name = file %>% str_replace(".xlsx", "")) %>%
mutate(name = fct_reorder(name, desc(`Number of reads mapped`))) %>%
ggplot( aes(x=name, y=`Number of reads mapped`, fill=database)) +
geom_bar(stat="identity", color="black", position=position_dodge(), alpha = 0.95, width = 0.75 ) +
scale_fill_manual(values=c('#999999','#E69F00')) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
geom_hline(yintercept=notPhiX.q95, linetype="dotdash", color = "grey") +
geom_hline(yintercept=notPhiX.mean, linetype="dashed", color = "black") +
geom_hline(yintercept=notPhiX.q05, linetype="dotdash", color = "grey") +
scale_y_continuous(label=scientific_10)
#
notPhiX.q95 = mean.databases$Q95[mean.databases$database == "notPhiX"]
notPhiX.mean = mean.databases$Mean[mean.databases$database == "notPhiX"]
notPhiX.q05 = mean.databases$Q05[mean.databases$database == "notPhiX"]
#
scientific_10 <- function(x) {
parse(text=gsub("e\\+*", " %*% 10^",
scales::scientific_format()(x))) }
#
p2 <- df.read %>%
mutate(name = file %>% str_replace(".xlsx", "")) %>%
mutate(name = fct_reorder(name, desc(`Number of reads mapped`))) %>%
ggplot( aes(x=name, y=`Number of reads mapped`, fill=database)) +
geom_bar(stat="identity", color="black", position=position_dodge(), alpha = 0.95, width = 0.75 ) +
scale_fill_manual(values=c('#999999','#E69F00')) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
geom_hline(yintercept=notPhiX.q95, linetype="dotdash", color = "grey") +
geom_hline(yintercept=notPhiX.mean, linetype="dashed", color = "black") +
geom_hline(yintercept=notPhiX.q05, linetype="dotdash", color = "grey") +
scale_y_continuous(label=scientific_10)
p2
notPhiX.q05
#
p2 <- df.read %>%
mutate(name = file %>% str_replace(".xlsx", "")) %>%
mutate(name = fct_reorder(name, desc(`Number of reads mapped`))) %>%
ggplot( aes(x=name, y=`Number of reads mapped`, fill=database)) +
geom_bar(stat="identity", color="black", position=position_dodge(), alpha = 0.95, width = 0.75 ) +
scale_fill_manual(values=c('#999999','#E69F00')) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
geom_hline(yintercept=notPhiX.q95, linetype="dotdash", color = "darkgrey") +
geom_hline(yintercept=notPhiX.mean, linetype="dashed", color = "black") +
geom_hline(yintercept=notPhiX.q05, linetype="dotdash", color = "darkgrey") +
scale_y_continuous(label=scientific_10)
p2
mean.databases = df %>%
group_by(database) %>%
summarize(Mean = mean(`Number of reads mapped`, na.rm=TRUE),
Q95 = quantile(`Number of reads mapped`, na.rm=TRUE,  probs = 0.95),
Q05 = quantile(`Number of reads mapped`, na.rm=TRUE,  probs = 0.05))
#
Unmapped.q95 = mean.databases$Q95[mean.databases$database == "Unmapped"]
Unmapped.mean = mean.databases$Mean[mean.databases$database == "Unmapped"]
Unmapped.q05 = mean.databases$Q05[mean.databases$database == "Unmapped"]
#
scientific_10 <- function(x) {
parse(text=gsub("e\\+*", " %*% 10^",
scales::scientific_format()(x))) }
#
p2 <- df.read %>%
mutate(name = file %>% str_replace(".xlsx", "")) %>%
mutate(name = fct_reorder(name, desc(`Number of reads mapped`))) %>%
ggplot( aes(x=name, y=`Number of reads mapped`, fill=database)) +
geom_bar(stat="identity", color="black", position=position_dodge(), alpha = 0.95, width = 0.75 ) +
scale_fill_manual(values=c('#999999','#E69F00')) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
geom_hline(yintercept=Unmapped.q95, linetype="dotdash", color = "darkgrey") +
geom_hline(yintercept=Unmapped.mean, linetype="dashed", color = "black") +
geom_hline(yintercept=Unmapped.q05, linetype="dotdash", color = "darkgrey") +
scale_y_continuous(label=scientific_10)
p2
Unmapped.q05
Unmapped.mean
mean.databases = df %>%
group_by(database) %>%
summarize(Mean = mean(`Number of reads mapped`, na.rm=TRUE),
Q95 = quantile(`Number of reads mapped`, na.rm=TRUE,  probs = 0.95),
Q05 = quantile(`Number of reads mapped`, na.rm=TRUE,  probs = 0.05),
SD = sd(`Number of reads mapped`, na.rm=TRUE))
View(mean.databases)
mean.databases = df %>%
group_by(database) %>%
summarize(Mean = mean(`Number of reads mapped`, na.rm=TRUE),
Q75 = quantile(`Number of reads mapped`, na.rm=TRUE,  probs = 0.75),
Q25 = quantile(`Number of reads mapped`, na.rm=TRUE,  probs = 0.25),
SD = sd(`Number of reads mapped`, na.rm=TRUE))
#
p2 <- df.read %>%
mutate(name = file %>% str_replace(".xlsx", "")) %>%
mutate(name = fct_reorder(name, desc(`Number of reads mapped`))) %>%
ggplot( aes(x=name, y=`Number of reads mapped`, fill=database)) +
geom_bar(stat="identity", color="black", position=position_dodge(), alpha = 0.95, width = 0.75 ) +
scale_fill_manual(values=c('#999999','#E69F00')) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
geom_hline(yintercept=Unmapped.q75, linetype="dotdash", color = "darkgrey") +
geom_hline(yintercept=Unmapped.mean, linetype="dashed", color = "black") +
geom_hline(yintercept=Unmapped.q25, linetype="dotdash", color = "darkgrey") +
scale_y_continuous(label=scientific_10)
#
Unmapped.q75 = mean.databases$Q75[mean.databases$database == "Unmapped"]
Unmapped.mean = mean.databases$Mean[mean.databases$database == "Unmapped"]
Unmapped.q25 = mean.databases$Q25[mean.databases$database == "Unmapped"]
#
scientific_10 <- function(x) {
parse(text=gsub("e\\+*", " %*% 10^",
scales::scientific_format()(x))) }
#
p2 <- df.read %>%
mutate(name = file %>% str_replace(".xlsx", "")) %>%
mutate(name = fct_reorder(name, desc(`Number of reads mapped`))) %>%
ggplot( aes(x=name, y=`Number of reads mapped`, fill=database)) +
geom_bar(stat="identity", color="black", position=position_dodge(), alpha = 0.95, width = 0.75 ) +
scale_fill_manual(values=c('#999999','#E69F00')) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
geom_hline(yintercept=Unmapped.q75, linetype="dotdash", color = "darkgrey") +
geom_hline(yintercept=Unmapped.mean, linetype="dashed", color = "black") +
geom_hline(yintercept=Unmapped.q25, linetype="dotdash", color = "darkgrey") +
scale_y_continuous(label=scientific_10)
p2
## Make some pie plots
df.list = lapply(my_files, function(i){
x = read_excel(i, sheet = "abundance.databases")
x = x[,c(2,3,4)]
x$file = i
x
})
x = x[,c("Reads","Genus")]
## Make some pie plots
df.list = lapply(my_files, function(i){
x = read_excel(i, sheet = "positive.species.Vertebrates_ot")
x = x[,c("Reads","Genus")]
x$file = i
x
})
x = read_excel(i, sheet = "positive.strain.Vertebrates_oth")
## Make some pie plots
df.list = lapply(my_files, function(i){
x = read_excel(i, sheet = "positive.strain.Vertebrates_oth")
x = x[,c("Reads","Genus")]
x$file = i
x
})
x = read_excel(i, sheet = "positive.species.Invertebrates")
## Make some pie plots
df.list = lapply(my_files, function(i){
x = read_excel(i, sheet = "positive.species.Invertebrates")
x = x[,c("Reads","Genus")]
x$file = i
x
})
#
p2 <- df.read %>%
mutate(name = file %>% str_replace(".xlsx", "")) %>%
mutate(name = fct_reorder(name, desc(`Number of reads mapped`))) %>%
ggplot( aes(x=name, y=`Number of reads mapped`, fill=database)) +
geom_bar(stat="identity", color="black", position=position_dodge(), alpha = 0.95, width = 0.75 ) +
scale_fill_manual(values=c('#999999','#E69F00')) +
scale_color_manual(values=c('#999999','#E69F00')) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
geom_hline(yintercept=Unmapped.q75, linetype="dotdash", color = "darkgrey") +
geom_hline(yintercept=Unmapped.mean, linetype="dashed", color = "black") +
geom_hline(yintercept=Unmapped.q25, linetype="dotdash", color = "darkgrey") +
scale_y_continuous(label=scientific_10)
p2
#
p2 <- df.read %>%
mutate(name = file %>% str_replace(".xlsx", "")) %>%
mutate(name = fct_reorder(name, desc(`Number of reads mapped`))) %>%
ggplot( aes(x=name, y=`Number of reads mapped`, fill=database)) +
geom_bar(stat="identity", position=position_dodge(), alpha = 0.95, width = 0.75 ) +
scale_fill_manual(values=c('#999999','#E69F00')) +
scale_color_manual(values=c('#999999','#E69F00')) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
geom_hline(yintercept=Unmapped.q75, linetype="dotdash", color = "darkgrey") +
geom_hline(yintercept=Unmapped.mean, linetype="dashed", color = "black") +
geom_hline(yintercept=Unmapped.q25, linetype="dotdash", color = "darkgrey") +
scale_y_continuous(label=scientific_10)
p2
library(wesanderson)
wes_palette("Royal1")[1:2]
#
p2 <- df.read %>%
mutate(name = file %>% str_replace(".xlsx", "")) %>%
mutate(name = fct_reorder(name, desc(`Number of reads mapped`))) %>%
ggplot( aes(x=name, y=`Number of reads mapped`, fill=database)) +
geom_bar(stat="identity", position=position_dodge(), alpha = 0.95, width = 0.75 ) +
scale_fill_manual(values=wes_palette("Royal1")[1:2]) +
scale_color_manual(values=wes_palette("Royal1")[1:2]) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
geom_hline(yintercept=Unmapped.q75, linetype="dotdash", color = "darkgrey") +
geom_hline(yintercept=Unmapped.mean, linetype="dashed", color = "black") +
geom_hline(yintercept=Unmapped.q25, linetype="dotdash", color = "darkgrey") +
scale_y_continuous(label=scientific_10)
p2
#
p2 <- df.read %>%
mutate(name = file %>% str_replace(".xlsx", "")) %>%
mutate(name = fct_reorder(name, desc(`Number of reads mapped`))) %>%
ggplot( aes(x=name, y=`Number of reads mapped`, fill=database)) +
geom_bar(stat="identity", position=position_dodge(), alpha = 0.95, width = 0.75 ) +
scale_fill_manual(values=wes_palette("Rushmore1")[3,5]) +
scale_color_manual(values=wes_palette("Rushmore1")[1:2]) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
geom_hline(yintercept=Unmapped.q75, linetype="dotdash", color = "darkgrey") +
geom_hline(yintercept=Unmapped.mean, linetype="dashed", color = "black") +
geom_hline(yintercept=Unmapped.q25, linetype="dotdash", color = "darkgrey") +
scale_y_continuous(label=scientific_10)
#
p2 <- df.read %>%
mutate(name = file %>% str_replace(".xlsx", "")) %>%
mutate(name = fct_reorder(name, desc(`Number of reads mapped`))) %>%
ggplot( aes(x=name, y=`Number of reads mapped`, fill=database)) +
geom_bar(stat="identity", position=position_dodge(), alpha = 0.95, width = 0.75 ) +
scale_fill_manual(values=wes_palette("Rushmore1")[c(3,5)]) +
scale_color_manual(values=wes_palette("Rushmore1")[c(3,5)]) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
geom_hline(yintercept=Unmapped.q75, linetype="dotdash", color = "darkgrey") +
geom_hline(yintercept=Unmapped.mean, linetype="dashed", color = "black") +
geom_hline(yintercept=Unmapped.q25, linetype="dotdash", color = "darkgrey") +
scale_y_continuous(label=scientific_10)
p2
#
p2 <- df.read %>%
mutate(name = file %>% str_replace(".xlsx", "")) %>%
mutate(name = fct_reorder(name, desc(`Number of reads mapped`))) %>%
ggplot( aes(x=name, y=`Number of reads mapped`, fill=database)) +
geom_bar(stat="identity", position=position_dodge(), alpha = 0.95, width = 0.75 ) +
scale_fill_manual(values=wes_palette("Rushmore1")[4:5]) +
scale_color_manual(values=wes_palette("Rushmore1")[4:5]) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
geom_hline(yintercept=Unmapped.q75, linetype="dotdash", color = "darkgrey") +
geom_hline(yintercept=Unmapped.mean, linetype="dashed", color = "black") +
geom_hline(yintercept=Unmapped.q25, linetype="dotdash", color = "darkgrey") +
scale_y_continuous(label=scientific_10)
p2
library(cowplot)
plot1 <- plot_grid(p1, p2, ncol = 1)
plot1
plot1 <- plot_grid(p2, p1, ncol = 1)
plot1
# Basic box plot
df$database <- factor(df$database, levels=c("notPhiX","Unmapped","Human","Vertebrates_mammals","Vertebrates_other", "Invertebrates", "Fungi"))
df.database <- df[df$database != "notPhiX",]
df.database <- df.database[df.database$database != "Unmapped",]
df.database <- df.database[df.database$database != "Vertebrates_other",]
p1 <- ggplot(df.database, aes(x=database, y=Percentage)) +
geom_boxplot(width=0.8) + theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
p1
#
p2 <- ggplot(df.Vertebrate, aes(x=database, y=Percentage)) +
geom_boxplot(width=0.8) + theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
#
df.Vertebrate <- df.database[df.database$database == "Vertebrates_other",]
#
p2 <- ggplot(df.Vertebrate, aes(x=database, y=Percentage)) +
geom_boxplot(width=0.8) + theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
p2
#
df.Vertebrate <- df[df$database == "Vertebrates_other",]
#
p2 <- ggplot(df.Vertebrate, aes(x=database, y=Percentage)) +
geom_boxplot(width=0.8) + theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
p2
p3 <- ggplot(df.database, aes(x=database, y=Percentage)) +
geom_boxplot(width=0.8) + theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
p3
#
df.read <- df[df$database == "notPhiX" | df$database == "Unmapped",]
#
library(dplyr)
library(forcats)
library(stringr)
library(wesanderson)
library(cowplot)
mean.databases = df %>%
group_by(database) %>%
summarize(Mean = mean(`Number of reads mapped`, na.rm=TRUE),
Q75 = quantile(`Number of reads mapped`, na.rm=TRUE,  probs = 0.75),
Q25 = quantile(`Number of reads mapped`, na.rm=TRUE,  probs = 0.25),
SD = sd(`Number of reads mapped`, na.rm=TRUE))
#
Unmapped.q75 = mean.databases$Q75[mean.databases$database == "Unmapped"]
Unmapped.mean = mean.databases$Mean[mean.databases$database == "Unmapped"]
Unmapped.q25 = mean.databases$Q25[mean.databases$database == "Unmapped"]
#
scientific_10 <- function(x) {
parse(text=gsub("e\\+*", " %*% 10^",
scales::scientific_format()(x))) }
#
p2 <- df.read %>%
mutate(name = file %>% str_replace(".xlsx", "")) %>%
mutate(name = fct_reorder(name, desc(`Number of reads mapped`))) %>%
ggplot( aes(x=name, y=`Number of reads mapped`, fill=database)) +
geom_bar(stat="identity", position=position_dodge(), alpha = 0.95, width = 0.75 ) +
scale_fill_manual(values=wes_palette("Rushmore1")[4:5]) +
scale_color_manual(values=wes_palette("Rushmore1")[4:5]) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
geom_hline(yintercept=Unmapped.q75, linetype="dotdash", color = "darkgrey") +
geom_hline(yintercept=Unmapped.mean, linetype="dashed", color = "black") +
geom_hline(yintercept=Unmapped.q25, linetype="dotdash", color = "darkgrey") +
scale_y_continuous(label=scientific_10)
p2
plot1 <- plot_grid(p2, p3, ncol = 1)
plot1 <- plot_grid(p2, p3, nrow = 1)
plot1 <- plot_grid(p1, p2, nrow = 1)
plot1 <- plot_grid(plot1,p3, ncol = 1)
plot1
#
p1 <- ggplot(df.Vertebrate, aes(x=database, y=Percentage)) +
geom_boxplot(width=0.8) + theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
p2 <- ggplot(df.database, aes(x=database, y=Percentage)) +
geom_boxplot(width=0.8) + theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
#
df.read <- df[df$database == "notPhiX" | df$database == "Unmapped",]
#
library(dplyr)
library(forcats)
library(stringr)
library(wesanderson)
library(cowplot)
mean.databases = df %>%
group_by(database) %>%
summarize(Mean = mean(`Number of reads mapped`, na.rm=TRUE),
Q75 = quantile(`Number of reads mapped`, na.rm=TRUE,  probs = 0.75),
Q25 = quantile(`Number of reads mapped`, na.rm=TRUE,  probs = 0.25),
SD = sd(`Number of reads mapped`, na.rm=TRUE))
#
Unmapped.q75 = mean.databases$Q75[mean.databases$database == "Unmapped"]
Unmapped.mean = mean.databases$Mean[mean.databases$database == "Unmapped"]
Unmapped.q25 = mean.databases$Q25[mean.databases$database == "Unmapped"]
#
scientific_10 <- function(x) {
parse(text=gsub("e\\+*", " %*% 10^",
scales::scientific_format()(x))) }
#
p3 <- df.read %>%
mutate(name = file %>% str_replace(".xlsx", "")) %>%
mutate(name = fct_reorder(name, desc(`Number of reads mapped`))) %>%
ggplot( aes(x=name, y=`Number of reads mapped`, fill=database)) +
geom_bar(stat="identity", position=position_dodge(), alpha = 0.95, width = 0.75 ) +
scale_fill_manual(values=wes_palette("Rushmore1")[4:5]) +
scale_color_manual(values=wes_palette("Rushmore1")[4:5]) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
geom_hline(yintercept=Unmapped.q75, linetype="dotdash", color = "darkgrey") +
geom_hline(yintercept=Unmapped.mean, linetype="dashed", color = "black") +
geom_hline(yintercept=Unmapped.q25, linetype="dotdash", color = "darkgrey") +
scale_y_continuous(label=scientific_10)
plot1 <- plot_grid(p1, p2, nrow = 1)
plot1 <- plot_grid(plot1,p3, ncol = 1)
plot1
plot1 <- plot_grid(p1, p2, nrow = 1, rel_widths = c(1, 2))
plot1 <- plot_grid(plot1,p3, ncol = 1, labels = "AUTO")
plot1
plot1 <- plot_grid(p1, p2, nrow = 1, rel_heights = c(1, 0.95))
plot1 <- plot_grid(plot1,p3, ncol = 1, labels = "AUTO")
plot1
plot1 <- plot_grid(p1, p2, nrow = 1, rel_widths = c(1, 2), , rel_heights = c(0.9, 1))
plot1 <- plot_grid(p1, p2, nrow = 1, rel_widths = c(1, 2), rel_heights = c(0.9, 1))
plot1 <- plot_grid(plot1,p3, ncol = 1, labels = "AUTO")
plot1
rel_heights
plot1 <- plot_grid(p1, p2, nrow = 1, rel_widths = c(1, 3))
plot1 <- plot_grid(plot1,p3, ncol = 1, labels = "AUTO")
plot1
plot1
#
p1 <- ggplot(df.Vertebrate, aes(x=database, y=Percentage)) +
geom_boxplot(width=0.8) + theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + xlab("")
p2 <- ggplot(df.database, aes(x=database, y=Percentage)) +
geom_boxplot(width=0.8) + theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + xlab("")
#
df.read <- df[df$database == "notPhiX" | df$database == "Unmapped",]
#
library(dplyr)
library(forcats)
library(stringr)
library(wesanderson)
library(cowplot)
mean.databases = df %>%
group_by(database) %>%
summarize(Mean = mean(`Number of reads mapped`, na.rm=TRUE),
Q75 = quantile(`Number of reads mapped`, na.rm=TRUE,  probs = 0.75),
Q25 = quantile(`Number of reads mapped`, na.rm=TRUE,  probs = 0.25),
SD = sd(`Number of reads mapped`, na.rm=TRUE))
#
Unmapped.q75 = mean.databases$Q75[mean.databases$database == "Unmapped"]
Unmapped.mean = mean.databases$Mean[mean.databases$database == "Unmapped"]
Unmapped.q25 = mean.databases$Q25[mean.databases$database == "Unmapped"]
#
scientific_10 <- function(x) {
parse(text=gsub("e\\+*", " %*% 10^",
scales::scientific_format()(x))) }
#
p3 <- df.read %>%
mutate(name = file %>% str_replace(".xlsx", "")) %>%
mutate(name = fct_reorder(name, desc(`Number of reads mapped`))) %>%
ggplot( aes(x=name, y=`Number of reads mapped`, fill=database)) +
geom_bar(stat="identity", position=position_dodge(), alpha = 0.95, width = 0.75 ) +
scale_fill_manual(values=wes_palette("Rushmore1")[4:5]) +
scale_color_manual(values=wes_palette("Rushmore1")[4:5]) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
geom_hline(yintercept=Unmapped.q75, linetype="dotdash", color = "darkgrey") +
geom_hline(yintercept=Unmapped.mean, linetype="dashed", color = "black") +
geom_hline(yintercept=Unmapped.q25, linetype="dotdash", color = "darkgrey") +
scale_y_continuous(label=scientific_10)
plot1 <- plot_grid(p1, p2, nrow = 1, rel_widths = c(1, 3))
plot1 <- plot_grid(plot1,p3, ncol = 1, labels = "AUTO")
plot1
p2 <- ggplot(df.database, aes(x=database, y=Percentage)) +
geom_boxplot(width=0.8) + theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + xlab("") + ylab("")
#
df.read <- df[df$database == "notPhiX" | df$database == "Unmapped",]
#
library(dplyr)
library(forcats)
library(stringr)
library(wesanderson)
library(cowplot)
mean.databases = df %>%
group_by(database) %>%
summarize(Mean = mean(`Number of reads mapped`, na.rm=TRUE),
Q75 = quantile(`Number of reads mapped`, na.rm=TRUE,  probs = 0.75),
Q25 = quantile(`Number of reads mapped`, na.rm=TRUE,  probs = 0.25),
SD = sd(`Number of reads mapped`, na.rm=TRUE))
#
Unmapped.q75 = mean.databases$Q75[mean.databases$database == "Unmapped"]
Unmapped.mean = mean.databases$Mean[mean.databases$database == "Unmapped"]
Unmapped.q25 = mean.databases$Q25[mean.databases$database == "Unmapped"]
#
scientific_10 <- function(x) {
parse(text=gsub("e\\+*", " %*% 10^",
scales::scientific_format()(x))) }
#
p3 <- df.read %>%
mutate(name = file %>% str_replace(".xlsx", "")) %>%
mutate(name = fct_reorder(name, desc(`Number of reads mapped`))) %>%
ggplot( aes(x=name, y=`Number of reads mapped`, fill=database)) +
geom_bar(stat="identity", position=position_dodge(), alpha = 0.95, width = 0.75 ) +
scale_fill_manual(values=wes_palette("Rushmore1")[4:5]) +
scale_color_manual(values=wes_palette("Rushmore1")[4:5]) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
geom_hline(yintercept=Unmapped.q75, linetype="dotdash", color = "darkgrey") +
geom_hline(yintercept=Unmapped.mean, linetype="dashed", color = "black") +
geom_hline(yintercept=Unmapped.q25, linetype="dotdash", color = "darkgrey") +
scale_y_continuous(label=scientific_10)
plot1 <- plot_grid(p1, p2, nrow = 1, rel_widths = c(1, 3))
plot1 <- plot_grid(plot1,p3, ncol = 1, labels = "AUTO")
plot1
plot1
setwd("~/XLSX/")
library(readxl)
library(tidyr)
my_files <- list.files(pattern = "*.xlsx")
df.list = lapply(my_files, function(i){
x = read_excel(i, sheet = "abundance.databases")
x = x[,c(2,3,4)]
x$file = i
x
})
do <- as.data.frame(do.call(rbind, lapply(df.list, as.vector)))
df <- cbind(my.var=rownames(do), do)
df[df == "NULL"] <- NA
library(ggplot2)
# Basic box plot
df$database <- factor(df$database, levels=c("notPhiX","Unmapped","Human","Vertebrates_mammals","Vertebrates_other", "Invertebrates", "Fungi"))
df.database <- df[df$database != "notPhiX",]
df.database <- df.database[df.database$database != "Unmapped",]
df.database <- df.database[df.database$database != "Vertebrates_other",]
my_files <- list.files(pattern = "*.xlsx")
df.list = lapply(my_files, function(i){
x = read_excel(i, sheet = "abundance.databases")
x = x[,c(2,3,4)]
x$file = i
x
})
