pcoa_Coenzyme = plot_ordination(Coenzyme_ps, GP.ord, type="samples",
color="Location",
label="ID",
title="Composition of coenzyme metabolites genes in wild Norwegian avians") +
geom_point(size=5) + theme_bw() +
scale_fill_manual(values = my_pal) +
scale_color_manual(values = my_pal)
Mobile_ps = subset_taxa(physeq, function. == "Mobilome: prophages, transposons")
GP.ord <- ordinate(Mobile_ps, "PCoA", "unifrac", weighted=TRUE)
pcoa_Mobile = plot_ordination(Mobile_ps, GP.ord, type="samples",
color="Location",
label="ID",
title="Composition of mobile elements in wild Norwegian avians") +
geom_point(size=5) + theme_bw() +
scale_fill_manual(values = my_pal) +
scale_color_manual(values = my_pal)
pdf("Functions_captive_location_PCoA.pdf", width = 18, height = 5)
plot_grid(pcoa_all, pcoa_AA, pcoa_CA, pcoa_Lipids, pcoa_Defense,pcoa_Secondary, pcoa_Coenzyme, pcoa_Mobile, labels = 'AUTO', nrow = 2)
dev.off()
rm(list = ls(all.names = TRUE)) #will clear all objects includes hidden objects.
gc() #free up memrory and report the memory usage.
setwd("~/XLSX/")
setwd("/Users/Jacob/Dropbox/Arbejde/PhD/HappyFish/Writing/NWS/NWS_MGmapper")
setwd("~/XLSX/")
setwd("./XLSX/")
my_files <- list.files(pattern = "*.xlsx")
df.list = lapply(my_files, function(i){
x = read_excel(i, sheet = "abundance.databases")
x = x[,c(2,3,4)]
x$file = i
x
})
do <- as.data.frame(do.call(rbind, lapply(df.list, as.vector)))
df <- cbind(my.var=rownames(do), do)
df[df == "NULL"] <- NA
View(df)
# Basic box plot
df$database <- factor(df$database, levels=c("notPhiX","Unmapped","Human","Vertebrates_mammals","Vertebrates_other", "Invertebrates", "Fungi"))
df.database <- df[df$database != "notPhiX",]
df.database <- df.database[df.database$database != "Unmapped",]
df.database <- df.database[df.database$database != "Vertebrates_other",]
#
df.Vertebrate <- df[df$database == "Vertebrates_other",]
View(df.database)
#
p1 <- ggplot(df.Vertebrate, aes(x=database, y=Percentage)) +
geom_boxplot(width=0.8) + theme_minimal() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.5, hjust=1)) + xlab("")
p2 <- ggplot(df.database, aes(x=database, y=Percentage)) +
geom_boxplot(width=0.8) + theme_minimal() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.5, hjust=1)) + xlab("") + ylab("")
#
df.read <- df[df$database == "notPhiX" | df$database == "Unmapped",]
#
library(dplyr)
library(forcats)
library(stringr)
library(wesanderson)
library(cowplot)
mean.databases = df %>%
group_by(database) %>%
summarize(Mean = mean(`Number of reads mapped`, na.rm=TRUE),
Q75 = quantile(`Number of reads mapped`, na.rm=TRUE,  probs = 0.75),
Q25 = quantile(`Number of reads mapped`, na.rm=TRUE,  probs = 0.25),
SD = sd(`Number of reads mapped`, na.rm=TRUE))
#
Unmapped.q75 = mean.databases$Q75[mean.databases$database == "Unmapped"]
Unmapped.mean = mean.databases$Mean[mean.databases$database == "Unmapped"]
Unmapped.q25 = mean.databases$Q25[mean.databases$database == "Unmapped"]
#
scientific_10 <- function(x) {
parse(text=gsub("e\\+*", " %*% 10^",
scales::scientific_format()(x))) }
#
p3 <- df.read %>%
mutate(name = file %>% str_replace(".xlsx", "")) %>%
mutate(name = fct_reorder(name, desc(`Number of reads mapped`))) %>%
ggplot( aes(x=name, y=`Number of reads mapped`, fill=database)) +
geom_bar(stat="identity", position=position_dodge(), alpha = 0.95, width = 0.75 ) +
scale_fill_manual(values=wes_palette("Rushmore1")[4:5]) +
scale_color_manual(values=wes_palette("Rushmore1")[4:5]) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
geom_hline(yintercept=Unmapped.q75, linetype="dotdash", color = "darkgrey") +
geom_hline(yintercept=Unmapped.mean, linetype="dashed", color = "black") +
geom_hline(yintercept=Unmapped.q25, linetype="dotdash", color = "darkgrey") +
scale_y_continuous(label=scientific_10)
plot1 <- plot_grid(p1, p2, nrow = 1, rel_widths = c(1, 3))
plot1 <- plot_grid(plot1,p3, ncol = 1, labels = "AUTO")
plot1
## Make some pie plots
df.list = lapply(my_files, function(i){
x = read_excel(i, sheet = "positive.species.Invertebrates")
x = x[,c("Reads","Genus")]
x$file = i
x
})
View(df.Vertebrate)
View(do)
path <- paste("/Users/Jacob/Dropbox/Arbejde/PhD/HappyFish/Writing/NWS/NWS_MGmapper")
my_files <- list.files(path = path, pattern = "*.xlsx")
path <- paste("/Users/Jacob/Dropbox/Arbejde/PhD/HappyFish/Writing/NWS/NWS_MGmapper/XLSX")
my_files <- list.files(path = path, pattern = "*.xlsx")
df.list = lapply(my_files, function(i){
x = read_excel(i, sheet = "abundance.databases")
x = x[,c(2,3,4)]
x$file = i
x
})
my_files <- list.files(path = path, pattern = "*.xlsx", full.names = TRUE)
df.list = lapply(my_files, function(i){
x = read_excel(i, sheet = "abundance.databases")
x = x[,c(2,3,4)]
x$file = i
x
})
View(df.list)
df.list = lapply(my_files, function(i){
x = read_excel(i, sheet = "positive.species.Invertebrates")
x = x[,c(2,3,4)]
x$file = i
x
})
path <- paste("/Users/Jacob/Dropbox/Arbejde/PhD/HappyFish/Writing/NWS/NWS_MGmapper/Invertebrates/")
my_files <- list.files(path = path, pattern = "*.xlsx", full.names = TRUE)
df.list = lapply(my_files, function(i){
x = read_excel(i, sheet = "positive.species.Invertebrates")
x = x[,c(2,3,4)]
x$file = i
x
})
View(df.list)
df.list[[1]][["R_Abundance (%)"]]
df.list = lapply(my_files, function(i){
x = read_excel(i, sheet = "positive.species.Invertebrates")
x = x[,c(2,6)]
x$file = i
x
})
do <- as.data.frame(do.call(rbind, lapply(df.list, as.vector)))
df <- cbind(my.var=rownames(do), do)
df[df == "NULL"] <- NA
View(df)
View(df)
stringr::str_remove(df$file, "/Users/Jacob/Dropbox/Arbejde/PhD/HappyFish/Writing/NWS/NWS_MGmapper/Invertebrates//")
df$file <- stringr::str_remove(df$file, "/Users/Jacob/Dropbox/Arbejde/PhD/HappyFish/Writing/NWS/NWS_MGmapper/Invertebrates//")
df$file <- stringr::str_remove(df$file, ".xlsx")
path <- paste("/Users/Jacob/Dropbox/Arbejde/PhD/HappyFish/Writing/NWS/NWS_MGmapper/Invertebrates/")
my_files <- list.files(path = path, pattern = "*.xlsx", full.names = TRUE)
df.list = lapply(my_files, function(i){
x = read_excel(i, sheet = "positive.species.Invertebrates")
x = x[,c(2,6)]
x$file = i
x
})
df.list = lapply(my_files, function(i){
x = read_excel(i, sheet = "positive.species.Invertebrates")
x = x[,c(2,6)]
x$file = i
x
})
do <- as.data.frame(do.call(rbind, lapply(df.list, as.vector)))
df <- cbind(my.var=rownames(do), do)
df[df == "NULL"] <- NA
df$file <- stringr::str_remove(df$file, path)
df$file <- stringr::str_remove(df$file, ".xlsx")
path <- paste("/Users/Jacob/Dropbox/Arbejde/PhD/HappyFish/Writing/NWS/NWS_MGmapper/Invertebrates")
my_files <- list.files(path = path, pattern = "*.xlsx", full.names = TRUE)
df.list = lapply(my_files, function(i){
x = read_excel(i, sheet = "positive.species.Invertebrates")
x = x[,c(2,6)]
x$file = i
x
})
df.list = lapply(my_files, function(i){
x = read_excel(i, sheet = "positive.species.Invertebrates")
x = x[,c(2,6)]
x$file = i
x
})
do <- as.data.frame(do.call(rbind, lapply(df.list, as.vector)))
df <- cbind(my.var=rownames(do), do)
df[df == "NULL"] <- NA
df$file <- stringr::str_remove(df$file, path)
df$file <- stringr::str_remove(df$file, ".xlsx")
df$file <- stringr::str_remove(df$file, "/")
path <- paste("/Users/Jacob/Dropbox/Arbejde/PhD/HappyFish/Writing/NWS/NWS_MGmapper/Invertebrates/")
my_files <- list.files(path = path, pattern = "*.xlsx", full.names = TRUE)
df.list = lapply(my_files, function(i){
x = read_excel(i, sheet = "positive.species.Invertebrates")
x = x[,c(2,6)]
x$file = i
x
})
do <- as.data.frame(do.call(rbind, lapply(df.list, as.vector)))
df <- cbind(my.var=rownames(do), do)
df[df == "NULL"] <- NA
df$file <- stringr::str_remove(df$file, path)
df$file <- stringr::str_remove(df$file, ".xlsx")
df$file <- stringr::str_remove(df$file, "/")
df <- df[,-c(1)]
diet_table = df %>% tidyverse::reduce(full_join, by = "vOTU")
diet_table = df %>% reduce(full_join, by = "vOTU")
diet_table = df %>% purrr::reduce(full_join, by = "vOTU")
diet_table = df %>% purrr::reduce(full_join, by = "D")
diet_table = df %>% IRanges::reduce(full_join, by = ")
diet_table = df %>% IRanges::reduce(full_join, by = "D")
diet_table = df %>% IRanges::reduce(full_join, by = "D")
diet_table = df.list %>% IRanges::reduce(full_join, by = "file")
View(df.list)
diet_table = df.list %>% purrr::reduce(full_join, by = "file")
View(diet_table)
diet_table = df.list %>% purrr::reduce(full_join, by = "Name")
View(diet_table)
diet_table = df %>% purrr::reduce(full_join, by = "Name")
diet_table = df %>% purrr::reduce(., by = "Name")
View(df)
diet_table = df %>% purrr::reduce(.x, by = "Name")
diet_table = purrr::reduce(df, by = "Name")
diet_table = df.list %>% IRanges::reduce(full_join, by = "file")
diet_table = IRanges::reduce(df, by = "file")
diet_table = IRanges::reduce(df$file, by = "Name")
datalist = lapply(df.list, function(x)read.table(x, header =T))
vOTU_table = df.list %>% reduce(full_join, by = "vOTU")
vOTU_table = df.list %>% reduce(full_join, by = "Name")
View(vOTU_table)
vOTU_table = df.list %>% reduce(full_join, by = "file")
View(vOTU_table)
vOTU_table = df.list %>% reduce(full_join, by = "Seq_count")
View(vOTU_table)
View(df)
diet_table = df %>%
group_by(file) %>%
summarize(count(Name))
diet_table = df %>%
group_by(file)
rm(list = ls(all.names = TRUE)) #will clear all objects includes hidden objects.
gc() #free up memrory and report the memory usage.
path <- paste("/Users/Jacob/Dropbox/Arbejde/PhD/HappyFish/Writing/NWS/NWS_MGmapper/Invertebrates/")
my_files <- list.files(path = path, pattern = "*.xlsx", full.names = TRUE)
df.list = lapply(my_files, function(i){
x = read_excel(i, sheet = "positive.species.Invertebrates")
x = x[,c(2,6)]
x$file = i
x
})
do <- as.data.frame(do.call(rbind, lapply(df.list, as.vector)))
df <- cbind(my.var=rownames(do), do)
df[df == "NULL"] <- NA
df$file <- stringr::str_remove(df$file, path)
df$file <- stringr::str_remove(df$file, ".xlsx")
df$file <- stringr::str_remove(df$file, "/")
df <- df[,-c(1)]
diet_table = df %>%
group_by(file)
View(diet_table)
diet_table = df %>%
group_by(Name)
View(diet_table)
diet_table = df %>%
group_by(file) %>%
group_by(Name) %>%
summarize(sum(Seq_count))
View(diet_table)
diet_table = df %>%
group_by(file) %>%
mutate(test =
summarize(sum(Seq_count)))
diet_table = df %>%
group_by(file) %>%
mutate(test =
sum(Seq_count))
View(diet_table)
diet_table = df %>%
group_by(file) %>%
mutate(Total =
sum(Seq_count),
R = Seq_count/Total)
diet_table = df %>%
group_by(file) %>%
mutate(Total =
sum(Seq_count),
R = Seq_count/Total*100)
diet_table = df %>%
group_by(file) %>%
mutate(Total =
sum(Seq_count),
R = round(Seq_count/Total*100,0))
diet_table = df %>%
group_by(file) %>%
mutate(Total =
sum(Seq_count),
R = round(Seq_count/Total*100,2))
df.R = df %>%
group_by(file) %>%
mutate(Total =
sum(Seq_count),
R = round(Seq_count/Total*100,2))
diet_table <- reshape2::acast(df.R, Name ~ file, function(x) {sort(as.character(x))[1]},
value.var = 'R', fill = 'none')
View(diet_table)
value.var = 'R', fill = 0')
diet_table <- reshape2::acast(df.R, Name ~ file, function(x) {sort(as.character(x))[1]},
value.var = 'R', fill = 0)
diet_table <- reshape2::acast(df.R, Name ~ file, function(x) {sort(as.character(x))[1]},
value.var = 'R', fill = NA)
diet_table <- reshape2::acast(df.R, Name ~ file, function(x) {sort(as.character(x))[1]},
value.var = 'R', fill = "NA")
View(diet_table)
is.na(diet_table) <- 0
diet_table <- reshape2::acast(df.R, Name ~ file, function(x) {sort(as.character(x))[1]},
value.var = 'R')
is.na(diet_table) <- 0
View(diet_table)
class(diet_table) <- "numeric"
is.na(diet_table) <- 0
diet_table[is.na(diet_table)] <- 0
View(diet_table)
View(diet_table)
diet_table <- reshape2::acast(df.R, file ~ Name, function(x) {sort(as.character(x))[1]},
value.var = 'R')
class(diet_table) <- "numeric"
diet_table[is.na(diet_table)] <- 0
View(diet_table)
# df
df <- read_xlsx("MAG_coverage.xlsx")
read_stat <- read_xlsx("Read_stat.xlsx")
# Tidy up df
df <- as.matrix(df)
rownames(df) <- df[,1]
df <- df[,-c(1)]
class(df) <- "numeric"
# tax
MAGtax <- read_xlsx("Tax.xlsx")
# Tidy up tax
MAGtax <- as.matrix(MAGtax)
# tax
MAGtax <- read_xlsx("MAG_Tax.xlsx")
# Tidy up tax
MAGtax <- as.matrix(MAGtax)
rownames(MAGtax) <- rownames(df)
MAGtax <- MAGtax[,-c(1)]
# md
md <- read_xlsx("metadata.xlsx")
# Tidy up md
md <- as.matrix(md)
rownames(md) <- md[,1]
md <- as.data.frame(md)
# df
df <- read_xlsx("MAG_coverage.xlsx")
Bin_Sum <- read_xlsx("bins_summary.xlsx")
# Tidy up df
df <- as.matrix(df)
rownames(df) <- df[,1]
df <- df[,-c(1)]
class(df) <- "numeric"
### TMP normalisation
size <- data.frame(MAG = Bin_Sum$MAG, Length = Bin_Sum$total_length)
colnames(size) <- c("hgnc_symbol", "transcript_length")
df.tmp <- NormalizeTPM(df, tr_length = size, scale = 1e+06) # the scale is just a constant, which can be changed, i added a million, so the total sum for each sample i 1.
colSums(df.tmp) # check Sample sum
MAGtax <- read_xlsx("MAG_Tax.xlsx")
# Tidy up tax
MAGtax <- as.matrix(MAGtax)
rownames(MAGtax) <- rownames(df)
MAGtax <- MAGtax[,-c(1)]
# md
md <- read_xlsx("metadata.xlsx")
# Tidy up md
md <- as.matrix(md)
rownames(md) <- md[,1]
md <- as.data.frame(md)
# Load diet data
diet <- diet_table
View(diet_table)
Species = (rownames(diet))
dietTax <- as.data.frame(ID = paste("X",seq(from = 1, to = nrow(diet), by = 1)),
Genus = word(rownames(diet), 1),
Species = rownames(diet))
View(diet)
diet_table <- reshape2::acast(df.R, Name ~ file, function(x) {sort(as.character(x))[1]},
value.var = 'R')
class(diet_table) <- "numeric"
diet_table[is.na(diet_table)] <- 0
# Load diet data
diet <- diet_table
dietTax <- as.data.frame(ID = paste("X",seq(from = 1, to = nrow(diet), by = 1)),
Genus = word(rownames(diet), 1),
Species = rownames(diet))
Species = rownames(diet)
Genus = word(rownames(diet), 1)
View(diet)
dietTax <- as.data.frame(ID = paste("X",seq(from = 1, to = 78, by = 1)),
Genus = word(rownames(diet), 1),
Species = rownames(diet))
dietTax <- as.data.frame(ID = seq(from = 1, to = 78, by = 1),
Genus = word(rownames(diet), 1),
Species = rownames(diet))
dietTax <- as.data.frame(ID = 1:78,
Genus = word(rownames(diet), 1),
Species = rownames(diet))
dietTax <- as.data.frame(ID = seq(1, 78),
Genus = word(rownames(diet), 1),
Species = rownames(diet))
IDs <- paste("ID_",seq(1, 78))
IDs <- paste("ID_",seq(1, 78), sep = "")
dietTax <- as.data.frame(ID = IDs,
Genus = word(rownames(diet), 1),
Species = rownames(diet))
dietTax <- as.data.frame(Genus = word(rownames(diet), 1),
Species = rownames(diet))
dietTax <- data.frame(Genus = word(rownames(diet), 1),
Species = rownames(diet),
ID = IDs)
View(dietTax)
rownames(diet) <- dietTax$ID
rownames(dietTax) <- dietTax$ID
md <- md[match(names(diet), md$ID),]
# md
md <- read_xlsx("metadata.xlsx")
# Tidy up md
md <- as.matrix(md)
rownames(md) <- md[,1]
md <- as.data.frame(md)
md <- md[,match(names(diet), md$ID)]
View(read_stat)
View(md)
# md
md <- read_xlsx("metadata.xlsx")
View(md)
# Tidy up md
md <- as.matrix(md)
rownames(md) <- md[,1]
md <- as.data.frame(md)
md <- md[match(rownames(t(diet)), md$ID),]
View(md)
## Make diet physeq object
Diet_physeq <- phyloseq(otu_table(diet,taxa_are_rows=TRUE),
tax_table(dietTax),
sample_data(md))
dietTax <- as.matrix(dietTax)
## Make diet physeq object
Diet_physeq <- phyloseq(otu_table(diet,taxa_are_rows=TRUE),
tax_table(dietTax),
sample_data(md))
#
random_tree = rtree(ntaxa(Diet_physeq), rooted=TRUE, tip.label=taxa_names(Diet_physeq))
Diet_physeq = merge_phyloseq(Diet_physeq, random_tree)
Diet_physeq = merge_phyloseq(Diet_physeq, random_tree)
## Make MAG physeq object
MAG_physeq <- phyloseq(otu_table(df,taxa_are_rows=TRUE),
tax_table(MAGtax),
sample_data(md))
#
random_tree = rtree(ntaxa(MAG_physeq), rooted=TRUE, tip.label=taxa_names(MAG_physeq))
MAG_physeq = merge_phyloseq(MAG_physeq, random_tree)
p_diet = plot_bar(Diet_physeq, "Sample", fill = "Genus") +
geom_bar(aes(color=Genus, fill=Genus), stat="identity", position="stack") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90)) +
scale_fill_brewer(palette = "Paired") +
scale_color_brewer(palette = "Paired") +
labs(x = "Individuals") +
labs(y = "Relative Abundance")
GP.ord <- ordinate(Diet_physeq.norm, "PCoA", "unifrac", weighted=TRUE)
pcoa.diet = plot_ordination(Diet_physeq, GP.ord, type="samples",
color="Location",
label="ID",
title="Invertebrates composition of wild Norwegian salmon") +
geom_point(size=5) + theme_bw() +
scale_fill_manual(values = my_pal) +
scale_color_manual(values = my_pal)
my_pal <- c("#8D929D","#C65B5B","#00A08A", "#FFA44F","#007057","#C6A5B1","#2BF1DB","#6F6F6F") # very important...
p_diet = plot_bar(Diet_physeq, "Sample", fill = "Genus") +
geom_bar(aes(color=Genus, fill=Genus), stat="identity", position="stack") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90)) +
scale_fill_brewer(palette = "Paired") +
scale_color_brewer(palette = "Paired") +
labs(x = "Individuals") +
labs(y = "Relative Abundance")
GP.ord <- ordinate(Diet_physeq, "PCoA", "unifrac", weighted=TRUE)
pcoa.diet = plot_ordination(Diet_physeq, GP.ord, type="samples",
color="Location",
label="ID",
title="Invertebrates composition of wild Norwegian salmon") +
geom_point(size=5) + theme_bw() +
scale_fill_manual(values = my_pal) +
scale_color_manual(values = my_pal)
#combine plots
plot_grid(p_diet + facet_wrap(~Location, scales = "free", nrow = 1),
pcoa.diet, labels = 'AUTO', nrow = 2)
p_diet = plot_bar(Diet_physeq, "Sample", fill = "Genus") +
geom_bar(aes(color=Genus, fill=Genus), stat="identity", position="stack") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90)) +
#scale_fill_brewer(palette = "Paired") +
#scale_color_brewer(palette = "Paired") +
labs(x = "Individuals") +
labs(y = "Relative Abundance")
GP.ord <- ordinate(Diet_physeq, "PCoA", "unifrac", weighted=TRUE)
GP.ord <- ordinate(Diet_physeq, "PCoA", "unifrac", weighted=TRUE)
pcoa.diet = plot_ordination(Diet_physeq, GP.ord, type="samples",
color="Location",
label="ID",
title="Invertebrates composition of wild Norwegian salmon") +
geom_point(size=5) + theme_bw() +
scale_fill_manual(values = my_pal) +
scale_color_manual(values = my_pal)
#combine plots
plot_grid(p_diet + facet_wrap(~Location, scales = "free", nrow = 1),
pcoa.diet, labels = 'AUTO', nrow = 2)
